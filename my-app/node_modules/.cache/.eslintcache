[{"/Users/mittank/Desktop/Projects_Training/React/my-app/src/index.js":"1","/Users/mittank/Desktop/Projects_Training/React/my-app/src/App.js":"2","/Users/mittank/Desktop/Projects_Training/React/my-app/src/reportWebVitals.js":"3","/Users/mittank/Desktop/Projects_Training/React/my-app/src/ToDo.js":"4","/Users/mittank/Desktop/Projects_Training/React/my-app/src/Edit.js":"5","/Users/mittank/Desktop/Projects_Training/React/my-app/src/components/BasicTable.js":"6","/Users/mittank/Desktop/Projects_Training/React/my-app/src/Nav.js":"7","/Users/mittank/Desktop/Projects_Training/React/my-app/src/components/Delete.js":"8"},{"size":540,"mtime":1646414612575,"results":"9","hashOfConfig":"10"},{"size":2440,"mtime":1646421220819,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1646070403288,"results":"12","hashOfConfig":"10"},{"size":666,"mtime":1646416923531,"results":"13","hashOfConfig":"10"},{"size":1322,"mtime":1646421512167,"results":"14","hashOfConfig":"10"},{"size":1549,"mtime":1646347232095,"results":"15","hashOfConfig":"10"},{"size":914,"mtime":1646421218542,"results":"16","hashOfConfig":"10"},{"size":1058,"mtime":1646421312116,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"12u33ez",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"21"},"/Users/mittank/Desktop/Projects_Training/React/my-app/src/index.js",[],[],["46","47"],"/Users/mittank/Desktop/Projects_Training/React/my-app/src/App.js",["48"],["49"],"import \"./App.css\";\nimport { Route, Routes, BrowserRouter as Router } from \"react-router-dom\";\nimport Edit from \"./Edit\";\nimport ToDo from \"./ToDo\";\nimport { React, useState } from \"react\";\nimport { BasicTable } from \"./components/BasicTable\";\nimport Nav from \"./Nav\";\nimport Delete from \"./components/Delete\";\n\nlet id = 5;\n\nfunction App() {\n  const [list, setList] = useState([\n    {\n      id: 1,\n      toDo: \"reinvent impactful deliverables\",\n    },\n    {\n      id: 2,\n      toDo: \"enable cross-platform infomediaries\",\n    },\n    {\n      id: 3,\n      toDo: \"synergize turn-key methodologies\",\n    },\n    {\n      id: 4,\n      toDo: \"engage web-enabled e-business\",\n    },\n    {\n      id: 5,\n      toDo: \"evolve magnetic supply-chains\",\n    },\n  ]);\n\n  // Function to add a specific to-do task to current list\n  const onAdd = (toDo) => {\n    setList((prevVal) => [...prevVal, { id: (id += 1), toDo: toDo }]);\n  };\n\n  // Function to edit a specific to-do task\n  const onEdit = (editData) => {\n    var index = 0;\n\n    // Loops through all entries within to-do list and edits the specific user-inputted index\n    var newArr = Object.entries(list).map(([key, value]) => {\n      index++;\n      // eslint-disable-next-line eqeqeq\n      if (value.id == editData.id) {\n        return { id: index, toDo: editData.item };\n      }\n      return { id: index, toDo: value.toDo };\n    });\n    setList(newArr);\n  };\n\n  // Function to delete a specific to-do task\n  const onDelete = (data) => {\n    const idToDelete = data.id2;\n    console.log(idToDelete, data);\n    // Loops through all entries within to-do list and only adds non-to-delete values\n    var newArr = list.filter((item) => {\n      console.log(item.id, typeof item.id, typeof idToDelete, idToDelete);\n      return item.id !== Number(idToDelete);\n    });\n    setList(newArr);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Component insertion */}\n      <Nav />\n      <br></br>\n\n      <BasicTable data={list} />\n\n      {/* Routing set-up, allows url switches based on paths below */}\n\n      <Routes>\n        <Route path=\"/todo\" element={<ToDo addItem={onAdd} />} />\n        <Route\n          path=\"/edit/:id\"\n          element={<Edit editItem={onEdit} deleteItem={onDelete} />}\n        />\n        <Route path=\"/table\" element={<BasicTable data={list} />} />\n        <Route path=\"/delete\" element={<Delete deleteItem={onDelete} />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mittank/Desktop/Projects_Training/React/my-app/src/reportWebVitals.js",[],[],"/Users/mittank/Desktop/Projects_Training/React/my-app/src/ToDo.js",[],[],"/Users/mittank/Desktop/Projects_Training/React/my-app/src/Edit.js",["50"],[],"import \"./components/todo.css\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams } from \"react-router-dom\";\n\nfunction Edit(props) {\n  let params = useParams();\n  let toDoId = params.id;\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm({ defaultValues: { id: toDoId, item: \"\" } });\n\n  // Moves to-edit data to parent (App.js)\n  const onSubmit = (data) => {\n    props.editItem(data);\n  };\n\n  return (\n    <div className=\"login-box2\">\n      {/* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */}\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"user-box\">\n          <h2>Edit an item</h2>\n\n          {/* include validation with required or other standard HTML validation rules */}\n\n          <input\n            defaultValue=\"Enter Index\"\n            {...register(\"id\", { required: true })}\n          />\n        </div>\n        <div className=\"user-box\">\n          <input\n            defaultValue=\"Enter To-Do Item\"\n            {...register(\"item\", { required: true })}\n          />\n        </div>\n        <input type=\"submit\" />\n        <br></br>\n\n        {/* errors will return when field validation fails  */}\n        {errors.id && <span>This field is required</span>}\n      </form>\n    </div>\n  );\n}\n\nexport default Edit;\n","/Users/mittank/Desktop/Projects_Training/React/my-app/src/components/BasicTable.js",[],[],"/Users/mittank/Desktop/Projects_Training/React/my-app/src/Nav.js",[],[],"/Users/mittank/Desktop/Projects_Training/React/my-app/src/components/Delete.js",["51"],[],"import \"./todo.css\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams } from \"react-router-dom\";\n\nfunction Delete(props) {\n  let params = useParams();\n  let toDoId = params.id;\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm({ defaultValues: { id: toDoId, item: \"\" } });\n\n  // Moves to-delete data to parent (App.js)\n  const onSubmit2 = (data) => {\n    props.deleteItem(data);\n  };\n\n  return (\n    <div className=\"login-box3\">\n      <form onSubmit={handleSubmit(onSubmit2)}>\n        <div className=\"user-box\">\n          <h2>Delete an item</h2>\n\n          {/* include validation with required or other standard HTML validation rules */}\n          <input\n            defaultValue=\"Enter Index\"\n            {...register(\"id2\", { required: true })}\n          />\n        </div>\n        <input type=\"submit\" />\n\n        {/* errors will return when field validation fails  */}\n        {errors.exampleRequired && <span>This field is required</span>}\n      </form>\n    </div>\n  );\n}\n\nexport default Delete;\n",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":2,"column":42,"nodeType":"58","messageId":"59","endLine":2,"endColumn":48},{"ruleId":"60","severity":1,"message":"61","line":49,"column":20,"nodeType":"62","messageId":"63","endLine":49,"endColumn":22,"suppressions":"64"},{"ruleId":"56","severity":1,"message":"65","line":12,"column":5,"nodeType":"58","messageId":"59","endLine":12,"endColumn":10},{"ruleId":"56","severity":1,"message":"65","line":12,"column":5,"nodeType":"58","messageId":"59","endLine":12,"endColumn":10},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["68"],"'watch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"kind":"69","justification":"70"},"directive",""]