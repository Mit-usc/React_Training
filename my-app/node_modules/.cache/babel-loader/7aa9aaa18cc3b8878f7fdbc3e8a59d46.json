{"ast":null,"code":"var _jsxFileName = \"/Users/mittank/Desktop/Projects_Training/React/my-app/src/Edit.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Edit() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  console.log(watch(\"example\")); // watch input value by passing the name of it\n\n  return (\n    /*#__PURE__*/\n\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Delete an item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"exampleRequired\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Edit, \"+LcrTzTax1ndAePIwZBfPwbnP68=\", false, function () {\n  return [useForm];\n});\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["/Users/mittank/Desktop/Projects_Training/React/my-app/src/Edit.js"],"names":["useForm","Edit","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","required","exampleRequired"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,OAAT,QAAwB,iBAAxB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJP,MAKFN,OAAO,EALX;;AAMA,QAAMO,QAAQ,GAAIC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAA3B;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAAC,SAAD,CAAjB,EATc,CASiB;;AAE/B;AAAA;;AACE;AACA;AAAM,MAAA,QAAQ,EAAED,YAAY,CAACI,QAAD,CAA5B;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,sBAAWL,QAAQ,CAAC,iBAAD,EAAoB;AAAES,UAAAA,QAAQ,EAAE;AAAZ,SAApB;AAAnB;AAAA;AAAA;AAAA;AAAA,cAJF,EAMGL,MAAM,CAACM,eAAP,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAN7B,eAQE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAaD;;GAxBQX,I;UAMHD,O;;;KANGC,I;AA0BT,eAAeA,IAAf","sourcesContent":["import \"./App.css\";\nimport { useForm } from \"react-hook-form\";\n\nfunction Edit() {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = (data) => console.log(data);\n\n  console.log(watch(\"example\")); // watch input value by passing the name of it\n\n  return (\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <h1>Delete an item</h1>\n\n      {/* include validation with required or other standard HTML validation rules */}\n      <input {...register(\"exampleRequired\", { required: true })} />\n      {/* errors will return when field validation fails  */}\n      {errors.exampleRequired && <span>This field is required</span>}\n\n      <input type=\"submit\" />\n    </form>\n  );\n}\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}