{"ast":null,"code":"var _jsxFileName = \"/Users/mittank/Desktop/Projects_Training/React/my-app/src/Edit.js\",\n    _s = $RefreshSig$();\n\nimport \"./components/todo.css\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Edit(props) {\n  _s();\n\n  let params = useParams();\n  let toDoId = params.id;\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      id: toDoId,\n      item: \"\"\n    }\n  }); // Moves to-edit data to parent (App.js)\n\n  const onSubmit = data => {\n    props.editItem(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-box2\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit an item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultValue: \"Enter Index\",\n          ...register(\"id\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          \"data-testid\": \"enterEditInput\",\n          defaultValue: \"Enter To-Do Item\",\n          ...register(\"item\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), errors.id && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Edit, \"UGeZIk1wDFZf5yRXOcoQXqTioOE=\", false, function () {\n  return [useParams, useForm];\n});\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["/Users/mittank/Desktop/Projects_Training/React/my-app/src/Edit.js"],"names":["useForm","useParams","Edit","props","params","toDoId","id","register","handleSubmit","watch","formState","errors","defaultValues","item","onSubmit","data","editItem","required"],"mappings":";;;AAAA,OAAO,uBAAP;AACA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,MAAIC,MAAM,GAAGH,SAAS,EAAtB;AACA,MAAII,MAAM,GAAGD,MAAM,CAACE,EAApB;AAEA,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJP,MAKFX,OAAO,CAAC;AAAEY,IAAAA,aAAa,EAAE;AAAEN,MAAAA,EAAE,EAAED,MAAN;AAAcQ,MAAAA,IAAI,EAAE;AAApB;AAAjB,GAAD,CALX,CAJmB,CAWnB;;AACA,QAAMC,QAAQ,GAAIC,IAAD,IAAU;AACzBZ,IAAAA,KAAK,CAACa,QAAN,CAAeD,IAAf;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BAEE;AAAM,MAAA,QAAQ,EAAEP,YAAY,CAACM,QAAD,CAA5B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AACE,UAAA,YAAY,EAAC,aADf;AAAA,aAEMP,QAAQ,CAAC,IAAD,EAAO;AAAEU,YAAAA,QAAQ,EAAE;AAAZ,WAAP;AAFd;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AACE,yBAAY,gBADd;AAEE,UAAA,YAAY,EAAC,kBAFf;AAAA,aAGMV,QAAQ,CAAC,MAAD,EAAS;AAAEU,YAAAA,QAAQ,EAAE;AAAZ,WAAT;AAHd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF,eAkBE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmBE;AAAA;AAAA;AAAA;AAAA,cAnBF,EAsBGN,MAAM,CAACL,EAAP,iBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GA7CQJ,I;UACMD,S,EAQTD,O;;;KATGE,I;AA+CT,eAAeA,IAAf","sourcesContent":["import \"./components/todo.css\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams } from \"react-router-dom\";\n\nfunction Edit(props) {\n  let params = useParams();\n  let toDoId = params.id;\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm({ defaultValues: { id: toDoId, item: \"\" } });\n\n  // Moves to-edit data to parent (App.js)\n  const onSubmit = (data) => {\n    props.editItem(data);\n  };\n\n  return (\n    <div className=\"login-box2\">\n      {/* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */}\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"user-box\">\n          <h2>Edit an item</h2>\n\n          {/* include validation with required or other standard HTML validation rules */}\n\n          <input\n            defaultValue=\"Enter Index\"\n            {...register(\"id\", { required: true })}\n          />\n        </div>\n        <div className=\"user-box\">\n          <input\n            data-testid=\"enterEditInput\"\n            defaultValue=\"Enter To-Do Item\"\n            {...register(\"item\", { required: true })}\n          />\n        </div>\n        <input type=\"submit\" />\n        <br></br>\n\n        {/* errors will return when field validation fails  */}\n        {errors.id && <span>This field is required</span>}\n      </form>\n    </div>\n  );\n}\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}