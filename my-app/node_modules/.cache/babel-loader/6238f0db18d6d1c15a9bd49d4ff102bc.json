{"ast":null,"code":"var _jsxFileName = \"/Users/mittank/Desktop/Projects_Training/React/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Edit from \"./Edit\";\nimport ToDo from \"./ToDo\";\nimport { React, useState } from \"react\";\nimport { BasicTable } from \"./components/BasicTable\";\nimport Nav from \"./Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet id = 5;\n\nfunction App() {\n  _s();\n\n  const [listItem, setItem] = useState(0);\n  const [list, setList] = useState([{\n    id: 1,\n    toDo: \"reinvent impactful deliverables\"\n  }, {\n    id: 2,\n    toDo: \"enable cross-platform infomediaries\"\n  }, {\n    id: 3,\n    toDo: \"synergize turn-key methodologies\"\n  }, {\n    id: 4,\n    toDo: \"engage web-enabled e-business\"\n  }, {\n    id: 5,\n    toDo: \"evolve magnetic supply-chains\"\n  }]); // Function to add a specific to-do task to current list\n\n  const onAdd = toDo => {\n    setList(prevVal => [...prevVal, {\n      id: id += 1,\n      toDo: toDo\n    }]);\n  }; // Function to edit a specific to-do task\n\n\n  const onEdit = editData => {\n    var index = 0; // Loops through all entries within to-do list and edits the specific user-inputted index\n\n    var newArr = Object.entries(list).map(_ref => {\n      let [key, value] = _ref;\n      index++; // eslint-disable-next-line eqeqeq\n\n      if (value.id == editData.id) {\n        return {\n          id: index,\n          toDo: editData.item\n        };\n      }\n\n      return {\n        id: index,\n        toDo: value.toDo\n      };\n    });\n    setList(newArr);\n  }; // Function to delete a specific to-do task\n\n\n  const onDelete = indexDelete => {\n    var index = 0; // Loops through all entries within to-do list and only adds non-to-delete values\n\n    var newArr = Object.entries(list).map(_ref2 => {\n      let [key, value] = _ref2;\n      index++; // eslint-disable-next-line eqeqeq\n\n      if (value.id == indexDelete.id2) {\n        index--;\n        return false;\n      } else {\n        return {\n          id: index,\n          toDo: value.toDo\n        };\n      }\n    });\n    id--; // removes false value from array generated above (logic should be better optimized here)\n\n    const newArr2 = newArr.filter(val => val !== false);\n    console.log(newArr2);\n    setList(newArr2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BasicTable, {\n      item: listItem,\n      data: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/todo\",\n        element: /*#__PURE__*/_jsxDEV(ToDo, {\n          addItem: onAdd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/edit\",\n        element: /*#__PURE__*/_jsxDEV(Edit, {\n          editItem: onEdit,\n          deleteItem: onDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/table\",\n        element: /*#__PURE__*/_jsxDEV(BasicTable, {\n          item: listItem,\n          data: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"i1VCri6KCCLGWNG5asg35EcZLzQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mittank/Desktop/Projects_Training/React/my-app/src/App.js"],"names":["Route","Routes","Edit","ToDo","React","useState","BasicTable","Nav","id","App","listItem","setItem","list","setList","toDo","onAdd","prevVal","onEdit","editData","index","newArr","Object","entries","map","key","value","item","onDelete","indexDelete","id2","newArr2","filter","val","console","log"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Edit from \"./Edit\";\nimport ToDo from \"./ToDo\";\nimport { React, useState } from \"react\";\nimport { BasicTable } from \"./components/BasicTable\";\nimport Nav from \"./Nav\";\nlet id = 5;\n\nfunction App() {\n  const [listItem, setItem] = useState(0);\n  const [list, setList] = useState([\n    {\n      id: 1,\n      toDo: \"reinvent impactful deliverables\",\n    },\n    {\n      id: 2,\n      toDo: \"enable cross-platform infomediaries\",\n    },\n    {\n      id: 3,\n      toDo: \"synergize turn-key methodologies\",\n    },\n    {\n      id: 4,\n      toDo: \"engage web-enabled e-business\",\n    },\n    {\n      id: 5,\n      toDo: \"evolve magnetic supply-chains\",\n    },\n  ]);\n\n  // Function to add a specific to-do task to current list\n  const onAdd = (toDo) => {\n    setList((prevVal) => [...prevVal, { id: (id += 1), toDo: toDo }]);\n  };\n\n  // Function to edit a specific to-do task\n  const onEdit = (editData) => {\n    var index = 0;\n\n    // Loops through all entries within to-do list and edits the specific user-inputted index\n    var newArr = Object.entries(list).map(([key, value]) => {\n      index++;\n      // eslint-disable-next-line eqeqeq\n      if (value.id == editData.id) {\n        return { id: index, toDo: editData.item };\n      }\n      return { id: index, toDo: value.toDo };\n    });\n    setList(newArr);\n  };\n\n  // Function to delete a specific to-do task\n  const onDelete = (indexDelete) => {\n    var index = 0;\n\n    // Loops through all entries within to-do list and only adds non-to-delete values\n    var newArr = Object.entries(list).map(([key, value]) => {\n      index++;\n      // eslint-disable-next-line eqeqeq\n      if (value.id == indexDelete.id2) {\n        index--;\n        return false;\n      } else {\n        return { id: index, toDo: value.toDo };\n      }\n    });\n\n    id--;\n    // removes false value from array generated above (logic should be better optimized here)\n    const newArr2 = newArr.filter((val) => val !== false);\n    console.log(newArr2);\n    setList(newArr2);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Component insertion */}\n      <Nav />\n      <br></br>\n\n      <BasicTable item={listItem} data={list} />\n      {/*\n      <ToDo addItem={onAdd} />\n      <Edit editItem={onEdit} deleteItem={onDelete} />\n      */}\n\n      {/* Routing set-up, allows url switches based on paths below */}\n      <Routes>\n        <Route path=\"/todo\" element={<ToDo addItem={onAdd} />} />\n        <Route\n          path=\"/edit\"\n          element={<Edit editItem={onEdit} deleteItem={onDelete} />}\n        />\n        <Route\n          path=\"/table\"\n          element={<BasicTable item={listItem} data={list} />}\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}