{"ast":null,"code":"var _jsxFileName = \"/Users/mittank/Desktop/Projects_Training/React/my-app/src/Edit.js\",\n    _s = $RefreshSig$();\n\nimport \"./components/todo.css\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Edit(props) {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm(); // Moves to-edit data to parent (App.js)\n\n  const onSubmit = data => {\n    props.editItem(data);\n  }; // Moves to-delete data to parent (App.js)\n\n\n  const onSubmit2 = data => {\n    props.deleteItem(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"login-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit an item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"user-box\",\n        defaultValue: \"Enter Index\",\n        ...register(\"id\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"user-box\",\n        defaultValue: \"Enter To-Do Item\",\n        ...register(\"item\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), errors.id && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit2),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Delete an item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: \"Enter Index\",\n        ...register(\"id2\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Edit, \"+LcrTzTax1ndAePIwZBfPwbnP68=\", false, function () {\n  return [useForm];\n});\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["/Users/mittank/Desktop/Projects_Training/React/my-app/src/Edit.js"],"names":["useForm","Edit","props","register","handleSubmit","watch","formState","errors","onSubmit","data","editItem","onSubmit2","deleteItem","required","id","exampleRequired"],"mappings":";;;AAAA,OAAO,uBAAP;AACA,SAASA,OAAT,QAAwB,iBAAxB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJP,MAKFP,OAAO,EALX,CADmB,CAQnB;;AACA,QAAMQ,QAAQ,GAAIC,IAAD,IAAU;AACzBP,IAAAA,KAAK,CAACQ,QAAN,CAAeD,IAAf;AACD,GAFD,CATmB,CAanB;;;AACA,QAAME,SAAS,GAAIF,IAAD,IAAU;AAC1BP,IAAAA,KAAK,CAACU,UAAN,CAAiBH,IAAjB;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA,4BAEE;AAAM,MAAA,QAAQ,EAAEL,YAAY,CAACI,QAAD,CAA5B;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,KAAK,EAAC,UADR;AAEE,QAAA,YAAY,EAAC,aAFf;AAAA,WAGML,QAAQ,CAAC,IAAD,EAAO;AAAEU,UAAAA,QAAQ,EAAE;AAAZ,SAAP;AAHd;AAAA;AAAA;AAAA;AAAA,cAJF,eASE;AACE,QAAA,KAAK,EAAC,UADR;AAEE,QAAA,YAAY,EAAC,kBAFf;AAAA,WAGMV,QAAQ,CAAC,MAAD,EAAS;AAAEU,UAAAA,QAAQ,EAAE;AAAZ,SAAT;AAHd;AAAA;AAAA;AAAA;AAAA,cATF,eAcE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE;AAAA;AAAA;AAAA;AAAA,cAfF,EAkBGN,MAAM,CAACO,EAAP,iBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAwBE;AAAM,MAAA,QAAQ,EAAEV,YAAY,CAACO,SAAD,CAA5B;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,YAAY,EAAC,aADf;AAAA,WAEMR,QAAQ,CAAC,KAAD,EAAQ;AAAEU,UAAAA,QAAQ,EAAE;AAAZ,SAAR;AAFd;AAAA;AAAA;AAAA;AAAA,cAJF,eAQE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAA;AAAA;AAAA;AAAA,cATF,EAYGN,MAAM,CAACQ,eAAP,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZ7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GA3DQd,I;UAMHD,O;;;KANGC,I;AA6DT,eAAeA,IAAf","sourcesContent":["import \"./components/todo.css\";\nimport { useForm } from \"react-hook-form\";\n\nfunction Edit(props) {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n\n  // Moves to-edit data to parent (App.js)\n  const onSubmit = (data) => {\n    props.editItem(data);\n  };\n\n  // Moves to-delete data to parent (App.js)\n  const onSubmit2 = (data) => {\n    props.deleteItem(data);\n  };\n\n  return (\n    <div class=\"login-box\">\n      {/* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */}\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h1>Edit an item</h1>\n\n        {/* include validation with required or other standard HTML validation rules */}\n        <input\n          class=\"user-box\"\n          defaultValue=\"Enter Index\"\n          {...register(\"id\", { required: true })}\n        />\n        <input\n          class=\"user-box\"\n          defaultValue=\"Enter To-Do Item\"\n          {...register(\"item\", { required: true })}\n        />\n        <input type=\"submit\" />\n        <br></br>\n\n        {/* errors will return when field validation fails  */}\n        {errors.id && <span>This field is required</span>}\n      </form>\n\n      {/* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */}\n      <form onSubmit={handleSubmit(onSubmit2)}>\n        <h1>Delete an item</h1>\n\n        {/* include validation with required or other standard HTML validation rules */}\n        <input\n          defaultValue=\"Enter Index\"\n          {...register(\"id2\", { required: true })}\n        />\n        <input type=\"submit\" />\n        <br></br>\n\n        {/* errors will return when field validation fails  */}\n        {errors.exampleRequired && <span>This field is required</span>}\n      </form>\n    </div>\n  );\n}\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}