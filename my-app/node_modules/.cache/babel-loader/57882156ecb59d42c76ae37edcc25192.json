{"ast":null,"code":"var _jsxFileName = \"/Users/mittank/Desktop/Projects_Training/React/my-app/src/components/BasicTable.js\";\nimport { React, useMemo } from \"react\";\nimport { useTable } from \"react-table\";\nimport \"./table.css\";\nimport Edit from \"../Edit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BasicTable() {\n  var _s = $RefreshSig$();\n\n  const columns_table = [{\n    Header: \"To-Do List\",\n    accessor: \"to_do\"\n  }];\n  var data_table = [{\n    to_do: \"synergize end-to-end systems\"\n  }, {\n    to_do: \"optimize robust functionalities\"\n  }, {\n    to_do: \"deliver one-to-one mindshare\"\n  }, {\n    to_do: \"e-enable dot-com channels\"\n  }, {\n    to_do: \"revolutionize extensible synergies\"\n  }];\n\n  const BasicTable2 = () => {\n    _s();\n\n    const columns = useMemo(() => columns_table, []);\n    const data = useMemo(() => data_table, []);\n    const tableInstance = useTable({\n      columns: columns,\n      data: data\n    });\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow\n    } = tableInstance;\n    return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(BasicTable2, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n    return [useTable];\n  });\n}\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/Users/mittank/Desktop/Projects_Training/React/my-app/src/components/BasicTable.js"],"names":["React","useMemo","useTable","Edit","BasicTable","columns_table","Header","accessor","data_table","to_do","BasicTable2","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,SAAjB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAMC,aAAa,GAAG,CACpB;AACEC,IAAAA,MAAM,EAAE,YADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GADoB,CAAtB;AAOA,MAAIC,UAAU,GAAG,CACf;AACEC,IAAAA,KAAK,EAAE;AADT,GADe,EAIf;AACEA,IAAAA,KAAK,EAAE;AADT,GAJe,EAOf;AACEA,IAAAA,KAAK,EAAE;AADT,GAPe,EAUf;AACEA,IAAAA,KAAK,EAAE;AADT,GAVe,EAaf;AACEA,IAAAA,KAAK,EAAE;AADT,GAbe,CAAjB;;AAkBA,QAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,UAAMC,OAAO,GAAGV,OAAO,CAAC,MAAMI,aAAP,EAAsB,EAAtB,CAAvB;AACA,UAAMO,IAAI,GAAGX,OAAO,CAAC,MAAMO,UAAP,EAAmB,EAAnB,CAApB;AAEA,UAAMK,aAAa,GAAGX,QAAQ,CAAC;AAC7BS,MAAAA,OAAO,EAAEA,OADoB;AAE7BC,MAAAA,IAAI,EAAEA;AAFuB,KAAD,CAA9B;AAKA,UAAM;AAAEE,MAAAA,aAAF;AAAiBC,MAAAA,iBAAjB;AAAoCC,MAAAA,YAApC;AAAkDC,MAAAA,IAAlD;AAAwDC,MAAAA;AAAxD,QACJL,aADF;AAGA,wBACE,sBAAWC,aAAa,EAAxB;AAAA,8BACE;AAAA,kBACGE,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBAChB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,oBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACvB,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,sBAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,sBAAWV,iBAAiB,EAA5B;AAAA,kBACGE,IAAI,CAACE,GAAL,CAAS,CAACO,GAAD,EAAMC,CAAN,KAAY;AACpBT,UAAAA,UAAU,CAACQ,GAAD,CAAV;AACA,8BACE,mBAAQA,GAAG,CAACE,WAAJ,EAAR;AAAA,sBACGF,GAAG,CAACG,KAAJ,CAAUV,GAAV,CAAeW,IAAD,IAAU;AACvB,kCACE,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,0BAA8BD,IAAI,CAACL,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,sBADF;AAGD,aAJA;AADH;AAAA;AAAA;AAAA;AAAA,kBADF;AASD,SAXA;AADH;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD,GAvCD;;AA1BoB,KA0Bdf,WA1Bc;AAAA,YA8BIR,QA9BJ;AAAA;AAkErB;;KAlEQE,U","sourcesContent":["import { React, useMemo } from \"react\";\nimport { useTable } from \"react-table\";\nimport \"./table.css\";\nimport Edit from \"../Edit\";\n\nfunction BasicTable() {\n  const columns_table = [\n    {\n      Header: \"To-Do List\",\n      accessor: \"to_do\",\n    },\n  ];\n\n  var data_table = [\n    {\n      to_do: \"synergize end-to-end systems\",\n    },\n    {\n      to_do: \"optimize robust functionalities\",\n    },\n    {\n      to_do: \"deliver one-to-one mindshare\",\n    },\n    {\n      to_do: \"e-enable dot-com channels\",\n    },\n    {\n      to_do: \"revolutionize extensible synergies\",\n    },\n  ];\n\n  const BasicTable2 = () => {\n    const columns = useMemo(() => columns_table, []);\n    const data = useMemo(() => data_table, []);\n\n    const tableInstance = useTable({\n      columns: columns,\n      data: data,\n    });\n\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n      tableInstance;\n\n    return (\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}