{"ast":null,"code":"var _jsxFileName = \"/Users/mittank/Desktop/Projects_Training/React/my-app/src/Edit.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Edit(props) {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    props.editItem(data, test);\n  };\n\n  var test = \"test\"; //console.log(watch(\"example\")); // watch input value by passing the name of it\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit an item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: \"Enter Index\",\n        ...register(\"exampleRequired\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Edit, \"+LcrTzTax1ndAePIwZBfPwbnP68=\", false, function () {\n  return [useForm];\n});\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["/Users/mittank/Desktop/Projects_Training/React/my-app/src/Edit.js"],"names":["useForm","Edit","props","register","handleSubmit","watch","formState","errors","onSubmit","data","editItem","test","required","exampleRequired"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,OAAT,QAAwB,iBAAxB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJP,MAKFP,OAAO,EALX;;AAMA,QAAMQ,QAAQ,GAAIC,IAAD,IAAU;AACzBP,IAAAA,KAAK,CAACQ,QAAN,CAAeD,IAAf,EAAqBE,IAArB;AACD,GAFD;;AAIA,MAAIA,IAAI,GAAG,MAAX,CAXmB,CAanB;;AAEA,sBACE;AAAA,2BAEE;AAAM,MAAA,QAAQ,EAAEP,YAAY,CAACI,QAAD,CAA5B;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,YAAY,EAAC,aADf;AAAA,WAEML,QAAQ,CAAC,iBAAD,EAAoB;AAAES,UAAAA,QAAQ,EAAE;AAAZ,SAApB;AAFd;AAAA;AAAA;AAAA;AAAA,cAJF,eAQE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAA;AAAA;AAAA;AAAA,cATF,EAYGL,MAAM,CAACM,eAAP,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAlCQZ,I;UAMHD,O;;;KANGC,I;AAoCT,eAAeA,IAAf","sourcesContent":["import \"./App.css\";\nimport { useForm } from \"react-hook-form\";\n\nfunction Edit(props) {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = (data) => {\n    props.editItem(data, test);\n  };\n\n  var test = \"test\";\n\n  //console.log(watch(\"example\")); // watch input value by passing the name of it\n\n  return (\n    <div>\n      {/* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */}\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h1>Edit an item</h1>\n\n        {/* include validation with required or other standard HTML validation rules */}\n        <input\n          defaultValue=\"Enter Index\"\n          {...register(\"exampleRequired\", { required: true })}\n        />\n        <input type=\"submit\" />\n        <br></br>\n\n        {/* errors will return when field validation fails  */}\n        {errors.exampleRequired && <span>This field is required</span>}\n      </form>\n    </div>\n  );\n}\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}