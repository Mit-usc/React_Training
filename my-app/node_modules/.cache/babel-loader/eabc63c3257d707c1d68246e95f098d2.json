{"ast":null,"code":"var _jsxFileName = \"/Users/mittank/Desktop/Projects_Training/React/my-app/src/components/BasicTable.js\",\n    _s = $RefreshSig$();\n\nimport { React, useMemo } from \"react\";\nimport { useTable } from \"react-table\";\nimport \"./table.css\";\nimport Edit from \"../Edit\";\nimport ToDo from \"../ToDo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns_table = [{\n  Header: \"To-Do List\",\n  accessor: \"to_do\"\n}];\nvar data_table = [{\n  to_do: \"synergize end-to-end systems\"\n}, {\n  to_do: \"optimize robust functionalities\"\n}, {\n  to_do: \"deliver one-to-one mindshare\"\n}, {\n  to_do: \"e-enable dot-com channels\"\n}, {\n  to_do: \"revolutionize extensible synergies\"\n}];\nexport const BasicTable = () => {\n  _s();\n\n  const columns = useMemo(() => columns_table, []);\n  const data = useMemo(() => data_table, []);\n  const tableInstance = useTable({\n    columns: columns,\n    data: data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/Users/mittank/Desktop/Projects_Training/React/my-app/src/components/BasicTable.js"],"names":["React","useMemo","useTable","Edit","ToDo","columns_table","Header","accessor","data_table","to_do","BasicTable","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,MAAM,EAAE,YADV;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CADoB,CAAtB;AAOA,IAAIC,UAAU,GAAG,CACf;AACEC,EAAAA,KAAK,EAAE;AADT,CADe,EAIf;AACEA,EAAAA,KAAK,EAAE;AADT,CAJe,EAOf;AACEA,EAAAA,KAAK,EAAE;AADT,CAPe,EAUf;AACEA,EAAAA,KAAK,EAAE;AADT,CAVe,EAaf;AACEA,EAAAA,KAAK,EAAE;AADT,CAbe,CAAjB;AAkBA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC9B,QAAMC,OAAO,GAAGV,OAAO,CAAC,MAAMI,aAAP,EAAsB,EAAtB,CAAvB;AACA,QAAMO,IAAI,GAAGX,OAAO,CAAC,MAAMO,UAAP,EAAmB,EAAnB,CAApB;AAEA,QAAMK,aAAa,GAAGX,QAAQ,CAAC;AAC7BS,IAAAA,OAAO,EAAEA,OADoB;AAE7BC,IAAAA,IAAI,EAAEA;AAFuB,GAAD,CAA9B;AAKA,QAAM;AAAEE,IAAAA,aAAF;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA,YAApC;AAAkDC,IAAAA,IAAlD;AAAwDC,IAAAA;AAAxD,MACJL,aADF;AAGA,sBACE;AAAA,4BACE,sBAAWC,aAAa,EAAxB;AAAA,8BACE;AAAA,kBACGE,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBAChB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,oBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACvB,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,sBAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,sBAAWV,iBAAiB,EAA5B;AAAA,kBACGE,IAAI,CAACE,GAAL,CAAS,CAACO,GAAD,EAAMC,CAAN,KAAY;AACpBT,UAAAA,UAAU,CAACQ,GAAD,CAAV;AACA,8BACE,mBAAQA,GAAG,CAACE,WAAJ,EAAR;AAAA,sBACGF,GAAG,CAACG,KAAJ,CAAUV,GAAV,CAAeW,IAAD,IAAU;AACvB,kCACE,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,0BAA8BD,IAAI,CAACL,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,sBADF;AAGD,aAJA;AADH;AAAA;AAAA;AAAA;AAAA,kBADF;AASD,SAXA;AADH;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA0BE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA1CM;;GAAMf,U;UAIWR,Q;;;KAJXQ,U","sourcesContent":["import { React, useMemo } from \"react\";\nimport { useTable } from \"react-table\";\nimport \"./table.css\";\nimport Edit from \"../Edit\";\nimport ToDo from \"../ToDo\";\n\nconst columns_table = [\n  {\n    Header: \"To-Do List\",\n    accessor: \"to_do\",\n  },\n];\n\nvar data_table = [\n  {\n    to_do: \"synergize end-to-end systems\",\n  },\n  {\n    to_do: \"optimize robust functionalities\",\n  },\n  {\n    to_do: \"deliver one-to-one mindshare\",\n  },\n  {\n    to_do: \"e-enable dot-com channels\",\n  },\n  {\n    to_do: \"revolutionize extensible synergies\",\n  },\n];\n\nexport const BasicTable = () => {\n  const columns = useMemo(() => columns_table, []);\n  const data = useMemo(() => data_table, []);\n\n  const tableInstance = useTable({\n    columns: columns,\n    data: data,\n  });\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    tableInstance;\n\n  return (\n    <div>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <Edit />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}